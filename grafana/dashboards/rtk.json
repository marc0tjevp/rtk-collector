{
  "id": null,
  "uid": "rtk-overview",
  "title": "Rocktech RTK Overview",
  "schemaVersion": 39,
  "refresh": "5s",
  "time": { "from": "now-15m", "to": "now" },
  "panels": [
    {
      "type": "stat",
      "title": "CPU Temp (Â°C)",
      "gridPos": { "h": 6, "w": 6, "x": 0, "y": 0 },
      "options": { "reduceOptions": { "calcs": ["lastNotNull"] }, "orientation": "horizontal" },
      "fieldConfig": { "defaults": { "unit": "celsius" }, "overrides": [] },
      "targets": [
        {
          "refId": "A",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "from(bucket: v.bucket) |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn:(r)=> r.group==\"sys\" and r._field==\"cpu_temp_c\") |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)"
        }
      ]
    },
    {
      "type": "stat",
      "title": "Load (1-min)",
      "gridPos": { "h": 6, "w": 6, "x": 6, "y": 0 },
      "options": { "reduceOptions": { "calcs": ["lastNotNull"] }, "orientation": "horizontal" },
      "fieldConfig": { "defaults": { "unit": "none" }, "overrides": [] },
      "targets": [
        {
          "refId": "A",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "from(bucket: v.bucket) |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn:(r)=> r.group==\"sys\" and r._field==\"load1\") |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)"
        }
      ]
    },

    {
      "type": "table",
      "title": "Status",
      "gridPos": { "h": 6, "w": 12, "x": 12, "y": 0 },
      "options": { "showHeader": true },
      "targets": [
        {
          "refId": "S",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "u_s = from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn:(r)=> r.group==\"sys\" and r._field==\"uptime_s\")\n  |> last()\n\nu_d = from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn:(r)=> r.group==\"sys\" and r._field==\"uptime_dhms\")\n  |> last()\n\nalive = from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn:(r)=> r.group==\"heartbeat\" and r._field==\"alive\")\n  |> last()\n\n# rows\nrow_ud = u_d |> keep(columns:[\"_value\"]) |> map(fn:(r)=> ({ metric: \"Uptime (dhms)\", value: string(v: r._value) }))\nrow_us = u_s |> keep(columns:[\"_value\"]) |> map(fn:(r)=> ({ metric: \"Uptime (s)\", value: string(v: r._value) }))\nrow_boot = u_s |> map(fn:(r)=> ({ t: now() - duration(v: int(v: r._value) * 1000000000) })) |> map(fn:(r)=> ({ metric: \"Last boot\", value: string(v: r.t) }))\nrow_on = alive |> map(fn:(r)=> ({ metric: \"Online\", value: if r._value then \"Yes\" else \"No\" }))\nrow_seen = alive |> keep(columns:[\"_time\"]) |> map(fn:(r)=> ({ metric: \"Last seen\", value: string(v: now() - r._time) }))\n\nunion(tables:[row_ud, row_us, row_boot, row_on, row_seen])\n  |> keep(columns:[\"metric\",\"value\"])"
        }
      ],
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      }
    },

    {
      "type": "timeseries",
      "title": "CPU Temp & Load (trend)",
      "gridPos": { "h": 8, "w": 12, "x": 0, "y": 6 },
      "fieldConfig": { "defaults": { "custom": { "drawStyle": "line", "lineWidth": 1, "fillOpacity": 10 } } },
      "targets": [
        {
          "refId": "T",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "t1 = from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn:(r)=> r.group==\"sys\" and r._field==\"cpu_temp_c\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nt2 = from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn:(r)=> r.group==\"sys\" and r._field==\"load1\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nunion(tables: [t1, t2])"
        }
      ]
    },

    {
      "type": "stat",
      "title": "IO0",
      "gridPos": { "h": 8, "w": 6, "x": 12, "y": 6 },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "values": false },
        "orientation": "horizontal",
        "textMode": "value",
        "colorMode": "background"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "none",
          "mappings": [
            { "type": "value", "options": { "0": { "text": "LOW" }, "1": { "text": "HIGH" } } }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "dark-gray", "value": null },
              { "color": "green", "value": 1 }
            ]
          }
        },
        "overrides": []
      },
      "targets": [
        {
          "refId": "A",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "from(bucket: v.bucket) |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn:(r)=> r.group==\"gpio\" and r._field==\"IO0\") |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)"
        }
      ]
    },
    {
      "type": "stat",
      "title": "IO1",
      "gridPos": { "h": 8, "w": 6, "x": 18, "y": 6 },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "values": false },
        "orientation": "horizontal",
        "textMode": "value",
        "colorMode": "background"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "none",
          "mappings": [
            { "type": "value", "options": { "0": { "text": "LOW" }, "1": { "text": "HIGH" } } }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "dark-gray", "value": null },
              { "color": "green", "value": 1 }
            ]
          }
        },
        "overrides": []
      },
      "targets": [
        {
          "refId": "A",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "from(bucket: v.bucket) |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn:(r)=> r.group==\"gpio\" and r._field==\"IO1\") |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)"
        }
      ]
    },
    {
      "type": "stat",
      "title": "IO2",
      "gridPos": { "h": 8, "w": 6, "x": 12, "y": 14 },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "values": false },
        "orientation": "horizontal",
        "textMode": "value",
        "colorMode": "background"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "none",
          "mappings": [
            { "type": "value", "options": { "0": { "text": "LOW" }, "1": { "text": "HIGH" } } }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "dark-gray", "value": null },
              { "color": "green", "value": 1 }
            ]
          }
        },
        "overrides": []
      },
      "targets": [
        {
          "refId": "A",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "from(bucket: v.bucket) |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn:(r)=> r.group==\"gpio\" and r._field==\"IO2\") |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)"
        }
      ]
    },
    {
      "type": "stat",
      "title": "IO3",
      "gridPos": { "h": 8, "w": 6, "x": 18, "y": 14 },
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "values": false },
        "orientation": "horizontal",
        "textMode": "value",
        "colorMode": "background"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "none",
          "mappings": [
            { "type": "value", "options": { "0": { "text": "LOW" }, "1": { "text": "HIGH" } } }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "dark-gray", "value": null },
              { "color": "green", "value": 1 }
            ]
          }
        },
        "overrides": []
      },
      "targets": [
        {
          "refId": "A",
          "datasource": "InfluxDB v2 (rtk)",
          "query": "from(bucket: v.bucket) |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn:(r)=> r.group==\"gpio\" and r._field==\"IO3\") |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)"
        }
      ]
    }
  ]
}
